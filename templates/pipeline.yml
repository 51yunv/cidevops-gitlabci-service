include:
- project: "cidevops/cidevops-newci-service"
  ref: master
  file: "jobs/build.yml"
- project: "cidevops/cidevops-newci-service"
  ref: master
  file: "jobs/test.yml"
- project: "cidevops/cidevops-newci-service"
  ref: master
  file: "jobs/codeanalysis.yml"

variables:
  #全局配置
  GIT_CLONE_PATH: "$CI_BUILDS_DIR/builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$CI_PIPELINE_ID"
  GIT_CHECKOUT: "false"
  
  #依赖容器镜像
  BUILD_IMAGE: "maven:3.6.3-jdk-8"
  
  #构建测试参数
  MAVEN_OPTS: "-Dmaven.repo.local=/home/gitlab-runner/ci-build-cache/maven"
  BUILD_SHELL: "mvn clean package -DskipTests --settings=./settings.xml"
  TEST_SHELL: "mvn test --settings=./settings.xml"
  JUNIT_REPORT_PATH: "target/surefire-reports/TEST-*.xml"
  
  #代码扫描相关变量
  SONAR_SERVER: "http://sonarqubetest.goschainccap.com"
  SONAR_USER: "admin"
  SONAR_USER_PASSWORD: "admin"
  SONAR_PROJECT_LANG: "JAVA"
  SONAR_SOURCE_DIR: "src"
  SONAR_SCAN_ARGS: "-Dsonar.sources=${SONAR_SOURCE_DIR} 
                   -Dsonar.java.binaries=target/classes 
                   -Dsonar.java.test.binaries=target/test-classes 
                   -Dsonar.java.surefire.report=target/surefire-reports"  

  
  
cache:
  paths:
  - target/

stages:
- build
- test

build:
  stage: build
  variables:
    GIT_CHECKOUT: "true"
  image: ${BUILD_IMAGE}
  extends: .build
  after_script:
  - ls target

test:
  stage: test
  image: ${BUILD_IMAGE}
  extends: .test
  before_script:
  - pwd
  - ls
  - ls target/